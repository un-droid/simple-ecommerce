name: ai e2e (manual)

on:
  workflow_dispatch:
    inputs:
      test_description:
        description: 'custom test instructions (optional)'
        required: false
        default: ''

jobs:
  ai-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      MCP_TIMEOUT: "15000"                # wait for mcp to come up

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: install deps
        run: |
          npm ci
          npm i -g @anthropic-ai/claude-code
          # playwright browsers + system deps (recommended for ci)
          npx playwright install --with-deps

      - name: build & start app
        run: |
          npm run build
          npm run start &                     # next start on :3000
          npx wait-on http://127.0.0.1:3000 --timeout 120000

      - name: write playwright mcp config
        run: |
          cat > playwright.mcp.json <<'JSON'
          {
            "browser": {
              "browserName": "chromium",
              "isolated": true,
              "launchOptions": { "headless": true }
            },
            "server": { "port": 8931, "host": "127.0.0.1" },
            "network": {
              "allowedOrigins": ["http://127.0.0.1:3000", "http://localhost:3000"]
            },
            "imageResponses": "omit",
            "outputDir": ".playwright-mcp-out"
          }
          JSON

      - name: start playwright mcp (sse)
        run: |
          npx @playwright/mcp@latest --config playwright.mcp.json --host 127.0.0.1 --port 8931 > mcp.log 2>&1 &
          echo $! > mcp.pid
          # wait for socket to be ready (works regardless of /mcp vs /sse)
          npx wait-on tcp:127.0.0.1:8931 --timeout ${MCP_TIMEOUT:-15000}

      - name: register mcp with claude (sse)
        run: |
          claude mcp add --transport sse playwright http://127.0.0.1:8931/sse --scope local
          claude mcp list

      - name: run ai tests via claude code
        shell: bash
        run: |
          # set default test instructions
          DEFAULT="use the \"playwright\" mcp server to test http://127.0.0.1:3000.
          steps:
            1) call browser_install if needed
            2) browser_navigate to \"/\"
            3) browser_snapshot
            4) click the first button named /add to cart/i
            5) browser_navigate to \"/cart\"
            6) read a total/subtotal; assert > 0 and show the value
            7) browser_navigate to \"/checkout\"
            8) browser_take_screenshot with filename \"checkout.png\"
          output: a terse markdown report with each step, pass/fail, and durations."
          
          # use custom prompt if provided, otherwise use default
          PROMPT="${{ github.event.inputs.test_description }}"
          if [[ -z "$PROMPT" ]]; then
            PROMPT="$DEFAULT"
          fi

          claude -p \
            --model sonnet \
            --max-turns 8 \
            --dangerously-skip-permissions \
            --output-format text \
            "$PROMPT" | tee test-results.md

      - name: show results
        if: always()
        run: cat test-results.md || true

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ai-test-results-${{ github.run_number }}
          path: |
            test-results.md
            .playwright-mcp-out/**/*.png

      - name: cleanup
        if: always()
        run: |
          pkill -F mcp.pid || true